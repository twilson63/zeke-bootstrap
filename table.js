// Generated by CoffeeScript 1.6.2
module.exports = function(tableData) {
  var tableclass;

  tableclass = "table";
  if (tableData.striped) {
    tableclass += " table-striped";
  }
  if (tableData.bordered) {
    tableclass += " table-bordered";
  }
  if (tableData.hover) {
    tableclass += " table-hover";
  }
  if (tableData.condensed) {
    tableclass += " table-condensed";
  }
  text("<table class=\"" + tableclass + "\">");
  if (tableData.caption) {
    caption(tableData.caption);
  }
  thead(function() {
    return tr(function() {
      var col, _i, _len, _ref, _results;

      _ref = tableData.columns;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        col = _ref[_i];
        _results.push(th(function() {
          if (typeof col.format === "function" ? col.format(text(col.format(col.head))) : void 0) {

          } else {
            return col.head;
          }
        }));
      }
      return _results;
    });
  });
  tbody(function() {
    var i, item, row, rowclass, tabledataitem, _i, _j, _len, _len1, _ref, _ref1, _results;

    _ref = tableData.rows;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      row = _ref[_i];
      rowclass = "tr";
      if (row.highlight) {
        rowclass += " class=\"" + row.highlight + "\"";
      }
      text("<" + rowclass + ">");
      _ref1 = row.data;
      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
        item = _ref1[i];
        tabledataitem = item;
        if (tableData.columns[i].format != null) {
          tabledataitem = tableData.columns[i].format(tabledataitem);
        }
        if (row.format != null) {
          tabledataitem = row.format(tabledataitem);
        }
        td(tabledataitem);
      }
      _results.push(text("</tr>"));
    }
    return _results;
  });
  return text('</table>');
};
